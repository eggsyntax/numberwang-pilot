# new version with multiple examples
rules_phase1 = [
    {'rule': 'The difference between successive list items must be constant.',
     'short_rule': 'constant differences',
     'examples': [
         [5, 11, 17, 23],
         [2, 5, 8, 11, 14],
         [19, 21, 23, 25],
     ],
     'difficulty': 0.25,
     },
    {'rule': 'There are no repeated numbers in the list.',
     'short_rule': 'no repeats',
     'examples': [
         [4, 11, 8, 6, 17],
         [153, 2, 19, 4],
         [99, 90, 56],
     ],
     'difficulty': 2.30,
     },
    {'rule': 'All list members are one less than a number with an integer square root.',
     'short_rule': 'decremented square',
     'examples': [
         [24, 48, 8, 15],
         [35, 3, 63, 24],
         [80, 99, 3],
     ],
     'difficulty': 2.35,
     },
    {'rule': 'The first item is duplicated somewhere in the list (eg [17, 4, 8, 17])',
     'short_rule': 'first item duplicated',
     'examples': [
         [14, 7, 9, 14],
         [73, 12, 73, 12],
         [9, 2, 23, 9, 20],
     ],
     'difficulty': 2.35,
     },
    {'rule': 'Differences between successive members of the list are alternately positive and negative (so for example [6, 3, 5, 3, 17, 2, 8, 5] would match the rule).',
     'short_rule': 'alternating increase decrease',
     'examples': [
         [22, 17, 19, 9, 12],
         [9, 14, 19],
         [62, 72, 5, 11],
     ],
     'difficulty': 2.45,
     },
    {'rule': 'No members of the list are prime numbers.',
     'short_rule': 'no primes',
     'examples': [
         [22, 15, 6, 9],
         [25, 12, 4, 27],
         [6, 21, 82],
     ],
     'difficulty': 2.50,
     },
    {'rule': 'The sum of all list items is 20.',
     'short_rule': 'sum to 20',
     'examples': [
         [4, 7, 6, 3],
         [2, 5, 5, 8],
         [11, 3, 6],
     ],
     'difficulty': 2.45,
     },
    {'rule': 'The list contains exactly one prime number',
     'short_rule': 'one prime',
     'examples': [
         [4, 7, 12, 18],
         [18, 9, 11, 21],
         [22, 8, 13],
     ],
     'difficulty': 3.55,
     },
]

rules_phase2_pt1 = [
    {'rule': 'List items must be in strictly increasing order',
     'short_rule': 'strictly increasing order',
     'examples': [
         [2, 5, 7, 14],
         [11, 14, 20, 21],
         [7, 16, 44],
     ],
     'difficulty': 1.10,
     },
    {'rule': 'There are no repeated numbers in the list.',
     'short_rule': 'no repeated numbers',
     'examples': [
         [4, 11, 8, 6],
         [9, 99, 1, 12],
         [3, 18, 11, 7, 12],
     ],
     'difficulty': 2.30,
     },
    {'rule': 'All list items are a multiple of 3 or 5, but are not a multiple of 15.',
     'short_rule': 'mult 3 or 5 not both',
     'examples': [
         [9, 25, 12, 10],
         [25, 6, 21, 35, 9],
         [12, 40, 27],
     ],
     'difficulty': 2.45,
     },
    {'rule': 'Each element must be in between the preceding two elements (the first two elements can be anything)',
     'short_rule': 'converging toward center',
     'examples': [
         [5, 24, 17, 21],
         [19, 3, 16, 11],
         [10, 2, 9, 4, 7],
     ],
     'difficulty': 3.05,
     },
    {'rule': 'The list must contain an odd number of odd numbers',
     'short_rule': 'odd number of odd numbers',
     'examples': [
         [15, 7, 12, 9],
         [10, 12, 3],
         [4, 9, 15, 8, 11],
     ],
     'difficulty': 3.25,
     },
    {'rule': 'The number of elements in the list must be prime',
     'short_rule': 'prime number of elements',
     'examples': [
         [8, 13, 2, 12, 5],
         [9, 17, 3],
         [2, 19, 10, 18, 1, 99, 60],
     ],
     'difficulty': 3.40,
     },
    {'rule': 'Each element is the list is either a) the sum of the preceding two elements or b) a repeat of the preceding number. The first element can be anything.',
     'short_rule': 'previous or sum',
     'examples': [
         [3, 3, 6, 9, 9, 18],
         [7, 7, 14, 21],
         [4, 4, 8],
     ],
     'difficulty': 3.70,
     },
    {'rule': 'If a list item n is even, the next item must be (n / 2). Otherwise (ie if n is odd), the next item must be (5 * n + 1). For example, [12, 6, 3, 10, 5, 16] follows the rule.',
     'short_rule': 'collatzish',
     'examples': [
         [12, 6, 3, 10, 5, 16],
         [4, 2, 1, 6, 3],
         [14, 7, 36, 18],
     ],
     'difficulty': 3.95,
     },
    {'rule': 'Each element is either divisible by the previous element, or is equal to the previous element plus 13. The first two elements can be anything. For example [2, 6, 19, 38, 51]',
     'short_rule': 'divisible or plus 13',
     'examples': [
         [2, 6, 19, 38, 51],
         [3, 6, 19, 32, 96],
         [1, 2, 8, 21],
     ],
     'difficulty': 4.35,
     },
    {'rule': 'Each item is equal to the first non-zero digit of (previous_item / 17). For example, [4, 2, 1, 5, 2] or ',
     'short_rule': 'previous over 17',
     'examples': [
         [4, 2, 1, 5, 2],
         [7, 4, 2],
         [9, 5, 2, 1],
     ],
     'difficulty': 4.70,
     },
]

# rules_phase2_pt2 = [
#     {'rule': '',
#      'short_rule': '',
#      'examples': [
#          [],
#          [],
#          [],
#      ],
#      'difficulty':
#      },
#     {'rule': '',
#      'short_rule': '',
#      'examples': [
#          [],
#          [],
#          [],
#      ],
#      'difficulty':
#      },
#     {'rule': '',
#      'short_rule': '',
#      'examples': [
#          [],
#          [],
#          [],
#      ],
#      'difficulty':
#      },
#     {'rule': '',
#      'short_rule': '',
#      'examples': [
#          [],
#          [],
#          [],
#      ],
#      'difficulty':
#      },
# ]

phase1_models = ['google/gemma-2-27b-it',
                 'meta-llama/llama-3.3-70b-instruct',
                 'qwen/qwen-2.5-coder-32b-instruct',
                 'openai/gpt-4o-2024-11-20',
                 'google/gemini-pro-1.5',
                 'anthropic/claude-3.5-sonnet:beta',
                 'anthropic/claude-3-opus:beta',
                 # 'openai/o1', # Can't do o1 because it thinks our prompt violates ToS :/
                 ]
phase2_models = ['google/gemma-2-27b-it',
                 'meta-llama/llama-3.3-70b-instruct',
                 'qwen/qwen-2.5-coder-32b-instruct',
                 'openai/gpt-4o-2024-11-20',
                 'google/gemini-pro-1.5',
                 'x-ai/grok-2-1212',
                 'cohere/command-r-plus',
                 'anthropic/claude-3.5-sonnet:beta',
                 'anthropic/claude-3-opus:beta',
                 # 'openai/o1', # Can't do o1 because it thinks our prompt violates ToS :/
                 ]
